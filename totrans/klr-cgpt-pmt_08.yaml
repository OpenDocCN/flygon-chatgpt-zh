- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT Prompts for Programming
  prefs: []
  type: TYPE_NORMAL
- en: ALONG WITH THE skills you've read about in other chapters, ChatGPT is pretty
    good at programming. That might seem strange; but ChatGPT is a large language
    model, and programs are written in various programming languages, most of which
    obey far more formal structures than English and the other human languages that
    ChatGPT handles so well.
  prefs: []
  type: TYPE_NORMAL
- en: If you're a programmer or you work in software development, try integrating
    ChatGPT into your workflow and see what it can do for you. Even if your interest
    in programming is casual and you just need to hack together a quick-and-dirty
    Word VBA macro or a Python script to perform a one-time task, ChatGPT may be able
    to save you time and effort.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start with the $64 million question …  ## Which Programming Languages
    Can ChatGPT Help You With?'
  prefs: []
  type: TYPE_NORMAL
- en: 'The short answer is: most of them. Python, Java, JavaScript, C, C++, C#, Ruby,
    PHP, Swift, Go, R, SQL, TypeScript, VBA, Rust, and MATLAB—ChatGPT is happy to
    help you with all of these, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: Beyond these programming languages, ChatGPT can help with shell scripting using
    tools such as Bash and PowerShell. It can also assist you with HTML and CSS, which
    aren't really programming languages but are universally used for websites. (Look
    back to [Chapter 7](c07.xhtml) for more on HTML and CSS.)
  prefs: []
  type: TYPE_NORMAL
- en: 'As of this writing, ChatGPT''s training data runs up to September 2021, so
    ChatGPT is best informed about programming languages that were current then and
    before. If you''re working with newer programming languages, such as Carbon (aka
    Carbon-Lang, introduced in 2022) or A Tensor Language (ATL, also new in 2022),
    ChatGPT will have less information but can search on the Web if you''re using
    the Web Browsing Model.  ## How Can ChatGPT Help You with Programming?'
  prefs: []
  type: TYPE_NORMAL
- en: 'ChatGPT can help with programming in five main ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Conceptualize the program or the code goal.** Before you begin typing code,
    you''ll normally want to describe the program or the other code object you plan
    to create. If the program is complex, consider breaking it down into components.
    ChatGPT can help you to define what the code should do.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Write the code.** Once you''ve clearly delineated your coding goal, it''s
    time to start writing—or time to have ChatGPT start writing for you. ChatGPT can
    not only help you map out the structure of the program or object, but it can also
    write complete code for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Debug the code.** Sometimes, ChatGPT''s—or your—initial version of the code
    won''t work. When this happens, you can ask ChatGPT to debug it for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Refactor the code.** Once the code is working, you can get ChatGPT to restructure
    the code to reduce its complexity and make it easier to read and maintain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Optimize the code.** When the code is structured the way you want, you can
    tell ChatGPT to optimize the code to make it run faster, consume fewer resources,
    or both.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We''ll look at each of these five steps with examples in the following sections.  ##
    Conceptualize the Program or Code Goal'
  prefs: []
  type: TYPE_NORMAL
- en: 'Your first step is usually to conceptualize the program or the code that you
    want to create. Here are examples of prompts you might use to enlist ChatGPT''s
    help:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Which programming language would I use
    to analyze large quantities of data?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT suggested languages such as Python, R, SQL, and Julia, explaining the
    pros and cons of each.
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Write a plan for creating a Python script
    to prompt the user to enter information that the script then stores in an Excel
    worksheet.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT provided a detailed plan, from setting up the Python environment and
    creating a new script all the way through to testing the script and expanding
    it to handle more complex scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Using the Go language, I want to create
    a function that adds two floating-point numbers and converts the result to an
    integer. Can you tell me how to get started?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Again, ChatGPT provided full details, including a warning that Go uses static
    typing, which means you need to specify the data types of the inputs and outputs
    the function uses.  ## Write Code'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get ChatGPT to write code, tell it which language to use and what code to
    create. Here are three examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Write a “Hello, Universe!” program in
    C, including comments explaining each statement.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT returned a program with comments explaining what it does. You can click
    the Copy Code button to copy the code, paste it into your C compiler, and run
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Implement a bubble sort algorithm in
    Rust that prints out every operation it performs so I can understand how the result
    is achieved.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT returned a “simple implementation of the Bubble Sort algorithm in Rust”
    with an example that you can copy and a detailed explanation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **How can I use the Python ruamel.yaml
    library to get two dictionaries: one for key-value pairs of tag and text, and
    one for key-value pairs of tag and comment for tag lines that include comments?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ChatGPT recommended using the CommentedMap object in the ruamel.yaml parser
    and provided an example with a detailed explanation.  ## Debug Code'
  prefs: []
  type: TYPE_NORMAL
- en: When you have code that isn't working, see if ChatGPT can help you debug it.
    ChatGPT is good with code that doesn't run at all, code that partly runs but produces
    specific errors, and code that runs apparently successfully but produces the wrong
    output because of logical errors.
  prefs: []
  type: TYPE_NORMAL
- en: '### Debug Code That Won''t Run'
  prefs: []
  type: TYPE_NORMAL
- en: 'If ChatGPT has created or worked with the code in this chat, you can simply
    refer ChatGPT to the code. If ChatGPT doesn''t know the code, you''ll need to
    paste it in. Give a prompt such as this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **The following code doesn''t run. Please
    review it and tell me what is wrong.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press Shift+Enter to create a new line, and then paste in the code by pressing
    Ctrl+V.
  prefs: []
  type: TYPE_NORMAL
- en: If ChatGPT can identify the problem, it returns a brief explanation of what
    the problem is and why it occurs. It also returns a version of the code, updated
    with the fix it has identified, for you to try.
  prefs: []
  type: TYPE_NORMAL
- en: 'To give the code a good trial, you may want to ask ChatGPT for test cases.
    Here''s an example prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Give me four test cases for testing
    the code you just fixed.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ChatGPT instantly returned those test cases, explaining what each does (such
    as “Test with a null string”) and showing the output each should produce.  ###
    Debug Code That Produces Specific Errors'
  prefs: []
  type: TYPE_NORMAL
- en: 'If your code produces a specific error, such as a SyntaxError error in Python,
    give ChatGPT the code and ask why that error occurred. Here''s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Why does this Python statement throw
    a SyntaxError?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press Shift+Enter to create a new line, and then paste in the offending statement
    by pressing Ctrl+V.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT returned an explanation, such as the following, and the corrected code.
  prefs: []
  type: TYPE_NORMAL
- en: '![Chatgpticon](images/chatgpticon.png) *The syntax error is occurring because
    you''re missing parentheses around the string you''re trying to print. In Python
    3, the *******print******* statement was replaced with a *******print()*******
    function*.  ### Debug Code That Produces Logical Errors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sometimes your code will run without throwing an error, but it will give a result
    that you can tell is wrong. This is usually the result of a *logical* error, which
    is an error that has to do with the logic of what the code does rather than the
    syntax of the code.
  prefs: []
  type: TYPE_NORMAL
- en: 'When your code produces a logical error, you can ask ChatGPT what''s wrong.
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Why does the following code return a
    positive number instead of a negative number?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ChatGPT analyzed the code, provided a detail explanation, and gave me a fixed
    version of the code to try.  ## Refactor Code'
  prefs: []
  type: TYPE_NORMAL
- en: By this point, your code should be working. Unless you were hacking together
    a quick fix to solve a problem that will never arise again, it's not yet time
    to find laurels to rest on. Instead, you should probably refactor your code, reducing
    its complexity and making it easier to read and maintain. Better yet, have ChatGPT
    refactor the code for you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are four examples of prompts for refactoring code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Please refactor this code to make it
    easy to read and easy to maintain.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **I want to make this code more maintainable.
    Can you find an existing library that extracts data as I''m doing here?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **In the following code, please replace
    the if-then-else chain with a case statement.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **Refactor this code, moving discrete
    functionality into a set of functions to reduce nesting.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For each of these examples, you would provide ChatGPT with the code unless
    ChatGPT already has access to the code in the active chat.  ## Optimize Code'
  prefs: []
  type: TYPE_NORMAL
- en: Once you've refactored the code to your preferred end, you can have ChatGPT
    optimize the code.
  prefs: []
  type: TYPE_NORMAL
- en: Here are two examples of prompts you might use to ask ChatGPT to optimize your
    code. As usual, you would paste in the code unless ChatGPT already has access
    to it in this chat.
  prefs: []
  type: TYPE_NORMAL
- en: '*   ![Prompticon](images/prompticon.png) **Identify any likely performance
    issues in the C# code below and tell me how to fix them.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **I''d like you to help me identify the
    most computationally-expensive operations in this code and tell me how to make
    it run faster.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You might also ask for optimization advice in general terms without giving
    ChatGPT your code. Here''s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Prompticon](images/prompticon.png) **I''m using Python with LXML and trying
    to get all elements with a “persist” attribute. My code iterates over every element
    and checks it for the “persist” attribute. The code runs slowly. Is there a better
    way to do this?**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT recommended using the XPath language to directly select XML elements
    that have the “persist” attribute.
  prefs: []
  type: TYPE_NORMAL
