- en: '[CHAPTER 3Working with Formulas and Functions](contents.xhtml#ch03a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Introduction](contents.xhtml#sc2_32a)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will explore the usage of formulas and functions in Microsoft
    Excel. Formulas are equations that perform calculations on values, while functions
    are predefined formulas that simplify complex tasks. We will cover topics such
    as using formulas in a worksheet, array formulas, using functions, IF function
    and its variations, and lookup functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[Structure](contents.xhtml#sc2_33a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will go over the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Using formulas in a worksheet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lookup functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making V-Lookup Dynamic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Index
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Objectives](contents.xhtml#sc2_34a)'
  prefs: []
  type: TYPE_NORMAL
- en: After studying this chapter, the reader will be able to understand the use of
    formula and functions as well as identify the different types of functions, and
    know the working of IF and other logical function.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using formulas in a worksheet](contents.xhtml#sc2_35a)'
  prefs: []
  type: TYPE_NORMAL
- en: Formulas are the equations that perform calculations on values. A formula starts
    with an equal sign (=). It contains at least two operands and one operation. For
    example, the following formula multiplies 2 by 3 and add 5 to the result.
  prefs: []
  type: TYPE_NORMAL
- en: =5+2*3
  prefs: []
  type: TYPE_NORMAL
- en: Operand in a formula can be functions, references or constants. Operators may
    be any arithmetic or logical operator.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: In Excel, the BODMAS rule is followed to solve a formula when multiple
    operators are involded.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Array formula](contents.xhtml#sc3_36a)'
  prefs: []
  type: TYPE_NORMAL
- en: In [Figure 3.1](#fig3-1), there are five products, for which we know the quantity
    and price. We need to find the Total Sales which is the result of adding together
    the product of quantity and price for all products. In a normal scenario, we would
    individually calculate the amount for each product and add them to get the answer.
    However, to make things simpler, we may also use Array Formula. Select B8 and
    write =sum (A2:A6*B2:B6) and press Ctrl + Shift + Enter key combination to fill
    the formula {=sum  (A1:A3*B1:B3)} in the selected cell, as shown in [Figure 3.2](#fig3-2).
    This calculates quantity*price for all the products in the cell B8.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: Curly brackets ({}) around the formula indicates that it is applied to
    an array.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 3.1](#fig3-1) features the quantity and price of five products:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.1: Quantity and price of five products'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 3.2](#fig3-2) features the Quantity*Price for all products:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.2: Quantity*Price for all products'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using functions](contents.xhtml#sc2_37a)'
  prefs: []
  type: TYPE_NORMAL
- en: Performing calculations on each value in a range of cells can be complicated
    and time-consuming. For example, if you have a range consisting of 20 cells, a
    formula that adds each of these values will be very long. Excel functions simplify
    complex tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Function is a predefined formula that performs a specific calculation or other
    action on a number or a text string and returns a value. You may specify the values
    on which the function performs calculations. The syntax of a function begins with
    the function name, followed by an opening parenthesis, the arguments for the function
    separated by commas and a closing parenthesis.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the function starts a formula, type an equal sign (=) before the function
    name. As you create a formula that contains a function, the Formula Palette will
    assist you, as shown in the following [Figure 3.3](#fig3-3):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3: Inserting a function'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: From an empty cell, you may click on the fx symbol near the formula bar
    to see all the available functions in Excel.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax of a function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =Function name (argument1, argument2, ….) |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =SUM (A10, B5: B10, 50, 37) |'
  prefs: []
  type: TYPE_TB
- en: There is no need of memorizing all the functions available and the arguments
    necessary for each function. Instead, you can use sigma sign (d) which is used
    for sum, or click on the drop down for some more functions like Max, Min, and
    so on. Excel prompts you for required and optional arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: You can use the Alt + = key combination to get the sum function on your
    worksheet.'
  prefs: []
  type: TYPE_NORMAL
- en: '[IF function](contents.xhtml#sc3_38a)'
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 2](ch02.xhtml), Cell References and Range, we have studied the calculation
    of income heads such as HRA and DA. The formula we saw was the same for the entire
    database. According to certain conditions, we need to decide the formula to apply.
    For example, incentives may be calculated according to the department. This is
    where conditional functions like “IF” come into the picture.
  prefs: []
  type: TYPE_NORMAL
- en: 'The IF function can be used for evaluating a condition. Depending on the conditions,
    whether it is true or false, IF function returns the values. The syntax for the
    IF function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '| If(logical_test, [Value_if_true], [Value_if_false]) |'
  prefs: []
  type: TYPE_TB
- en: The first argument is the condition that you need the function to evaluate.
    The second argument is the value to be returned if the condition is true and the
    third argument is the value to be returned if the condition is false. Second and
    third parameters are optional.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose you want to calculate HRA based on designation of the employees. If
    the Designation is Manager, then HRA is 1000 or else 500\. Then the function code
    will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =if (C2="Manager", 1000, 500) |'
  prefs: []
  type: TYPE_TB
- en: 'Refer to [Figure 3.4](#fig3-4):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.4: IF function'
  prefs: []
  type: TYPE_NORMAL
- en: As given in [Figure 3.4](#fig3-4), the above function calculates HRA as 1000
    for Managers and 500 for others.
  prefs: []
  type: TYPE_NORMAL
- en: '[Nested IF](contents.xhtml#sc3_39a)'
  prefs: []
  type: TYPE_NORMAL
- en: A Nested IF function is used when a second IF function is placed inside the
    first order, in order to test additional conditions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax for the Nested IF function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '| If (logical_test, [Value_if_true], If (logical_test, [Value_if_true], [Value_if_false]))
    |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use nested IF functions to evaluate the complex conditions. For example,
    if the Salary is <5000, then the tax is 5%. If salary is between 5000 and 1000,
    then it is 10%, or else it is 15%. Since we have already given name range to salary
    column as sal, so one can also use sal instead of h2 =if (sal<5000, salary*.05,
    if (sal<10000, salary*.10, sal*.15)). Refer to [Figure 3.5](#fig3-5):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.5: Using Nested IF function'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose you want to assign letter grades to numbers referenced by the name
    Average Score, as shown in the following [Table 3.1](#tab3-1):'
  prefs: []
  type: TYPE_NORMAL
- en: '| If Average Score is | The return |'
  prefs: []
  type: TYPE_TB
- en: '| Greater than 89 | A |'
  prefs: []
  type: TYPE_TB
- en: '| From 80 to 89 | B |'
  prefs: []
  type: TYPE_TB
- en: '| From 70 to 79 | C |'
  prefs: []
  type: TYPE_TB
- en: '| From 60 to 69 | D |'
  prefs: []
  type: TYPE_TB
- en: '| Less than 60 | F |'
  prefs: []
  type: TYPE_TB
- en: 'Table 3.1: Assigning letter grades'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the following nested IF function:'
  prefs: []
  type: TYPE_NORMAL
- en: '| IF (AverageScore>89,"A", IF (AverageScore>79,"B", IF (AverageScore>69,"C",
    IF (AverageScore>59,"D","F")))) |'
  prefs: []
  type: TYPE_TB
- en: 'Note: You can nest up to sixty-four levels of IF functions in a single formula.'
  prefs: []
  type: TYPE_NORMAL
- en: '[IF with AND](contents.xhtml#sc3_40a)'
  prefs: []
  type: TYPE_NORMAL
- en: In Excel, OR is a logical function which returns false if any one of the arguments
    returns false.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| AND (logical1, logical2...) |'
  prefs: []
  type: TYPE_TB
- en: If there is a scenario where we have two conditions whose combined truth value
    would decide the output of an IF function, we can use AND with IF.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| If (and (Condition1, condition2….), True, False) |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If we need to give 10% of his basic salary as incentive to everyone working
    in “Sales” department in the “North” region, we would use the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: =IF (AND (Department=”sales”, Region=”north”), 10%*Basic Salary, 0)
  prefs: []
  type: TYPE_NORMAL
- en: '[IF with OR](contents.xhtml#sc3_41a)'
  prefs: []
  type: TYPE_NORMAL
- en: OR is a logical function in Excel, which returns False if any one of the arguments
    returns false.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| OR (logical1, logical2...) |'
  prefs: []
  type: TYPE_TB
- en: If there is a scenario where we have two conditions of which any one of the
    conditions is false, then the IF should return the value in the false argument,
    we may use OR with IF.
  prefs: []
  type: TYPE_NORMAL
- en: Syntax using OR with If
  prefs: []
  type: TYPE_NORMAL
- en: '| If (OR (Condition1, condition2….), True, False) |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: If the employee is in Sales, Mktg or Hrd, then HRA is 50% of Basic salary. Otherwise,
    it is 30% of Basic salary.
  prefs: []
  type: TYPE_NORMAL
- en: If (or (Department=”Mktg”, Department =”Sales”, Department=”Hrd”), Basic salary*.5,
    Basic salary*.3)
  prefs: []
  type: TYPE_NORMAL
- en: '[IF with NOT](contents.xhtml#sc3_42a)'
  prefs: []
  type: TYPE_NORMAL
- en: It is a logical function which is used to negate an argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| NOT (logical) |'
  prefs: []
  type: TYPE_TB
- en: If we have a condition which when not satisfied, we need to apply the formula,
    we may use NOT with IF.
  prefs: []
  type: TYPE_NORMAL
- en: Syntax using NOT with If
  prefs: []
  type: TYPE_NORMAL
- en: '| If (NOT (Condition), True, False) |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If we need to give an incentive to everyone except people working in the “Marketing”
    department, we may use the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: IF (NOT (Department=”MT”), 10%*salary, 0)
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: There can be maximum 255 conditions which can be passed to AND/OR function
    and we can pass only one condition to NOT.'
  prefs: []
  type: TYPE_NORMAL
- en: We may also use multiple NOT inside IF.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you need to give an incentive to everyone but not to people from the sales
    and admin department, you may use the following function:'
  prefs: []
  type: TYPE_NORMAL
- en: If (and (not (department=”Sales”), not (department=”admin”)), 10%*salary, 0)
  prefs: []
  type: TYPE_NORMAL
- en: '[Lookup functions](contents.xhtml#sc2_43a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometimes, we need to search for a value in a database based on a lookup value.
    For example, given Employee Id, how can we look up the incentive value from some
    other sheet or some other file? In such scenarios, depending on the source database,
    we may use one of the following lookup functions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'V-lookup (If the database is vertical). Refer to [Figure 3.6](#fig3-6):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](images/Figure_3.6.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 3.6: V-lookup'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'H-lookup (If the database is horizontal): Refer to [Figure 3.7](#fig3-7):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](images/Figure_3.7.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 3.7: H-lookup'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[V Lookup](contents.xhtml#sc3_44a)'
  prefs: []
  type: TYPE_NORMAL
- en: If we need to get the value of a column from some other file or sheet based
    on a common field, you may use V-lookup. V-lookup is a function that searches
    for a value (lookup value) in the leftmost column of a given database (table array)
    and returns a value in the same row from a column you specify.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| VLOOKUP (lookup_value, table_array, col_index_num, range_lookup) |'
  prefs: []
  type: TYPE_TB
- en: 'You can write this function by using the built-in-function Arguments dialog-box.
    Click on the Formulas tab and search in the lookup & Reference category for vlookup.
    You will get a function Arguments dialog box, as shown in [Figure 3.8](#fig3-8):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.8: V-lookup function argument'
  prefs: []
  type: TYPE_NORMAL
- en: 'The different values to be selected here are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lookup_value:  Value to be found in the first column of the table. It is the
    value that you are looking for. Lookup_value can be a value, a reference or a
    text string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Table_array:  Table of information in which data is looked up. It is the source
    database. Use a reference to a range or a range name.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Col_index_num:  Column number in table_array from which the matching value
    must be returned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Range_lookup: Logical value that specifies whether you want VLOOKUP to find
    an exact match or an approximate match. If Range Lookup is set as FALSE or 0,
    VLOOKUP will find an exact match. If exact match is not found, the error value
    #N/A is returned. If it is set to TRUE or non- zero, it finds the nearest value
    that is less than lookup value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[H-lookup](contents.xhtml#sc3_45a)'
  prefs: []
  type: TYPE_NORMAL
- en: H-lookup function searches for a value in the top most row of a table, and then
    returns a value in the same column from a row you specify.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '| HLOOKUP (lookup_value, table_array, row_index_num, range_lookup) |'
  prefs: []
  type: TYPE_TB
- en: H-lookup works the same way as V-lookup. However, in this case, we need to specify
    the row index number, instead of the column index number.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: You may also get the function argument box by the following type. Type
    =VLOOPUP (or =HLOOKUP (as the case may be) and press Ctrl + A.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Example of Vlookup with Range 0 (False):](contents.xhtml#sc4_46a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose you want to add incentive in the Salary Sheet according to the incentive
    table, the range of which is A1:B12 in the Incentive worksheet. Follow the given
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the cell, where you want the result.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Insert function. Select the Vlookup() function from Lookup and Reference
    category.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Lookup Value: Select A2 [The Employee code]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Table Array: Select the Incentive Sheet and Select the Range from $A$1:$B$12
    [that is, Employee code and incentive Column]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Column Index: Type 2 [Column 2 is the Incentive column in Incentive table]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Range Lookup: Type False [we are searching the exact match from the table for
    the lookup value]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To remove #NA (Not Available Error), you can use the function Iferror. The
    Syntax of iferror is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| = iferror (vlookup….,"") |'
  prefs: []
  type: TYPE_TB
- en: '[Example of Vlookup with Range Non-Zero (True)](contents.xhtml#sc4_47a)'
  prefs: []
  type: TYPE_NORMAL
- en: Suppose you want to add incentive based on salary Slab-wise. In this case, instead
    of IF condition, you can use Vlookup with True range. In this scenario, we would
    create a table such as [Table 3.2](#tab3-2). In table array, select this table
    and in the field for range lookup, type “True” instead of “False”.
  prefs: []
  type: TYPE_NORMAL
- en: '| 0 | 2% |'
  prefs: []
  type: TYPE_TB
- en: '| 5000 | 5% |'
  prefs: []
  type: TYPE_TB
- en: '| 10000 | 10% |'
  prefs: []
  type: TYPE_TB
- en: '| 15000 | 15% |'
  prefs: []
  type: TYPE_TB
- en: 'Table 3.2: Sample example table'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: The table in this case would be sorted in ascending order of first column.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Advanced Excel Assignment file, emp_inf sheet, we need to retrieve information
    of the employee based on his employee id. To do this, we may use vlookup, as shown
    in the following [Figure 3.9](#fig3-9):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.9: Example of Vlookup with Range Non-Zero'
  prefs: []
  type: TYPE_NORMAL
- en: To find other details, you may use the same formula and change the column index
    number accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: '[Making V-Lookup Dynamic](contents.xhtml#sc2_48a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'When we have a dynamic database, where a new column gets added to the database
    frequently, position of the current columns may also change. However, column index
    number of Vlookup does not update automatically with the growing database. This
    is where we would need to make VLookup Dynamically, in order to pick up the column
    index number. To do this, we may use one of the following functions to retrieve
    the column index number dynamically:'
  prefs: []
  type: TYPE_NORMAL
- en: Column
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Match
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Column function in Vlookup](contents.xhtml#sc3_49a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To make Vlookup dynamic, we can use the column header as an indicator that
    would dynamically pick up the index number of the particular column in which the
    required value exists. The syntax of using the column functions in vlookup is:'
  prefs: []
  type: TYPE_NORMAL
- en: '| = vlookup (lookup_value, table_array, COLUMN (reference), Range_lookup) |'
  prefs: []
  type: TYPE_TB
- en: Here, Reference parameter of column function would contain the cell reference
    of the column header from the original database.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the preceding example of vlookup, if we need to find the column index number
    dynamically, we may use column function, as shown in the following [Figure 3.10](#fig3-10):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.10: Using Column Function in Vlookup'
  prefs: []
  type: TYPE_NORMAL
- en: B1 is the reference to the column header of the First Name column in the ‘Salary’
    worksheet.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using Match function in V-Lookup](contents.xhtml#sc3_50a)'
  prefs: []
  type: TYPE_NORMAL
- en: As we saw in the preceding case, we require access to the original database
    or at least an idea as to the current position of the column. However, this information
    would not always be there for us. So, here we need to use a function that can
    retrieve the position of the column header just by the name.
  prefs: []
  type: TYPE_NORMAL
- en: A Match function does just the same. Match function returns the position of
    a string in a range.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax of match function is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| MATCH (lookup_value, lookup_array, [match_type]) |'
  prefs: []
  type: TYPE_TB
- en: 'The various options to be chosen are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lookup_Value:  It is the string that we are looking up for. It may be a string,
    for example, “Salary” or a cell reference where the string is stored.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lookup_Array:  It is the range from which we need to know the position of Lookup_value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Match_Type:  It is an optional parameter that is used to specify the type of
    match we require 0: Exact match, 1: Less than, -1: Greater Than.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: If we need to find out the position of the string “salary” in the first row
    of the salary sheet, we would write,
  prefs: []
  type: TYPE_NORMAL
- en: '| =match ("salary", salary! $1:$1, 0) |'
  prefs: []
  type: TYPE_TB
- en: We may use the match function instead of column Index number to get the column
    index number dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax of using match function in vlookup is:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =vlookup (lookup_value, table_array, match (label, firstrow of source- database,
    0), Range_lookup) |'
  prefs: []
  type: TYPE_TB
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the emp_inf example, if we need to make the vlookup more dynamic using the
    column headers, we may use match with vlookup, as shown in [Figure 3.11](#fig3-11).
    Here, the match looks for the labels on each field in the header of salary database
    and returns the position of the column dynamically:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.11: Match function in vlookup'
  prefs: []
  type: TYPE_NORMAL
- en: '[Index](contents.xhtml#sc2_51a)'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, we need to lookup for a data in the database, based on its row number
    and column number. Index function helps us do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax of index function is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| INDEX (array, row_number, [column_number]) |'
  prefs: []
  type: TYPE_TB
- en: As you can see there are two ways in which you can use the Index function. The
    first syntax is used to look for data in a single database and the second syntax
    is used when more than one database is involved.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose we need to find the data at the intersection of row number 3 and column
    number 4 of a database. In that case, we may use the following function:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =index (database, 3, 4) |'
  prefs: []
  type: TYPE_TB
- en: '[Index-Match](contents.xhtml#sc3_52a)'
  prefs: []
  type: TYPE_NORMAL
- en: As we studied before, vlookup looks for the data on the basis of values in the
    first column of the database. However, if we have a database where our lookup
    value is in the middle and we need to search towards the left, we have to move
    the column to the left most corner before we use vlookup. Index function when
    used along with match helps us search for the data even if the lookup value is
    not present on the left-most column.
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax for index-match is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| INDEX (array, [MATCH (lookup_value, lookup_array, [match_type])], [Match
    (lookup_value, lookup_array, [match_type])]) |'
  prefs: []
  type: TYPE_TB
- en: Here, you may use match function for row number or column number or both.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose, from the data given in the following [Figure 3.12](#fig3-12), we need
    to find the total sales, given year and quarter. We may then use the function:'
  prefs: []
  type: TYPE_NORMAL
- en: '| =INDEX (database, MATCH (qtr 3, column header, 0), MATCH (year, years column,
    0)) |'
  prefs: []
  type: TYPE_TB
- en: '![](images/Figure_3.12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.12: Index-match function'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following [Figure 3.13](#fig3-13), empcode is the third column. Here
    if we need to find out the DA or Salary Based on the empcode, we normally copy
    and paste the column towards the left and use vlookup. Instead, we may use index
    match as given in [Figure 3.13](#fig3-13):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure_3.13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.13: To find out the DA or Salary Based on the empcode by using Index
    match'
  prefs: []
  type: TYPE_NORMAL
- en: '[Conclusion](contents.xhtml#sc2_53a)'
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, the use of formulas and functions in Microsoft Excel is essential
    for performing calculations, data analysis, and automating tasks. Formulas allow
    users to combine values, cell references, and operators to perform mathematical
    calculations, while functions provide predefined formulas for common tasks. By
    utilizing formulas and functions effectively, users can save time, minimize errors,
    and perform complex data analysis in Excel. Understanding and mastering these
    tools is crucial for anyone working with data and spreadsheets in Excel.
  prefs: []
  type: TYPE_NORMAL
- en: '[Exercise](contents.xhtml#sc2_54a)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Make a copy of the Salary worksheet from advanced Excel assignment workbook.
    Calculate the following incentive schemes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Incentive 1: Everyone working in “Sales” department gets 10% of their salary
    as incentive all others gets 0'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Incentive 2: Everyone working in “sales” or “marketing” department gets 5%
    of their salary as incentive all others gets 2%.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Calculate the incentive scheme in Q.1 c using V-lookup column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make a column “Reporting Manager” after Salary column and deploy the employee
    code of the managers to the employees according to their employee numbers as follows
    using V-Lookup.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Join our book’s Discord space
  prefs: []
  type: TYPE_NORMAL
- en: 'Join the book’s Discord Workspace for Latest updates, Offers, Tech happenings
    around the world, New Release and Sessions with the Authors:'
  prefs: []
  type: TYPE_NORMAL
- en: '**[https://discord.bpbonline.com](https://discord.bpbonline.com)**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/fm1.png)'
  prefs: []
  type: TYPE_IMG
