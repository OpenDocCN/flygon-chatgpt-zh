- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: ChatGPT Prompts for Programming
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT编程提示
- en: ALONG WITH THE skills you've read about in other chapters, ChatGPT is pretty
    good at programming. That might seem strange; but ChatGPT is a large language
    model, and programs are written in various programming languages, most of which
    obey far more formal structures than English and the other human languages that
    ChatGPT handles so well.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除了你在其他章节中了解的技能，ChatGPT在编程方面表现得相当不错。这可能看起来很奇怪；但ChatGPT是一个庞大的语言模型，程序是用各种编程语言编写的，其中大多数遵循比英语和ChatGPT处理得很好的其他人类语言更正式的结构。
- en: If you're a programmer or you work in software development, try integrating
    ChatGPT into your workflow and see what it can do for you. Even if your interest
    in programming is casual and you just need to hack together a quick-and-dirty
    Word VBA macro or a Python script to perform a one-time task, ChatGPT may be able
    to save you time and effort.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是程序员或从事软件开发工作，请尝试将ChatGPT整合到你的工作流程中，看看它能为你做些什么。即使你对编程的兴趣是随意的，只是需要快速拼凑一个简单粗暴的Word
    VBA宏或Python脚本来执行一次性任务，ChatGPT也许能为你节省时间和精力。
- en: 'Let''s start with the $64 million question …  ## Which Programming Languages
    Can ChatGPT Help You With?'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们从那个$6400万的问题开始...  ## ChatGPT可以帮助你处理哪些编程语言？'
- en: 'The short answer is: most of them. Python, Java, JavaScript, C, C++, C#, Ruby,
    PHP, Swift, Go, R, SQL, TypeScript, VBA, Rust, and MATLAB—ChatGPT is happy to
    help you with all of these, and more.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 简短的回答是：大多数。Python，Java，JavaScript，C，C++，C#，Ruby，PHP，Swift，Go，R，SQL，TypeScript，VBA，Rust和MATLAB——ChatGPT很乐意帮助你处理所有这些，以及更多。
- en: Beyond these programming languages, ChatGPT can help with shell scripting using
    tools such as Bash and PowerShell. It can also assist you with HTML and CSS, which
    aren't really programming languages but are universally used for websites. (Look
    back to [Chapter 7](c07.xhtml) for more on HTML and CSS.)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些编程语言，ChatGPT还可以帮助使用Bash和PowerShell等工具进行shell脚本编写。它还可以协助你处理HTML和CSS，虽然它们不是真正的编程语言，但在网站中被普遍使用。（回顾[第7章](c07.xhtml)了解更多关于HTML和CSS的内容。）
- en: 'As of this writing, ChatGPT''s training data runs up to September 2021, so
    ChatGPT is best informed about programming languages that were current then and
    before. If you''re working with newer programming languages, such as Carbon (aka
    Carbon-Lang, introduced in 2022) or A Tensor Language (ATL, also new in 2022),
    ChatGPT will have less information but can search on the Web if you''re using
    the Web Browsing Model.  ## How Can ChatGPT Help You with Programming?'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '截至本文撰写时，ChatGPT的训练数据截至2021年9月，因此ChatGPT对当时及之前的编程语言了解最为深入。如果你正在使用更新的编程语言，比如Carbon（又名Carbon-Lang，于2022年推出）或A
    Tensor Language（ATL，也是2022年新推出的），ChatGPT将了解较少信息，但如果你使用Web浏览模式，它可以在网络上搜索。  ## ChatGPT如何帮助你进行编程？'
- en: 'ChatGPT can help with programming in five main ways:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT可以在编程方面提供五种主要帮助：
- en: '**Conceptualize the program or the code goal.** Before you begin typing code,
    you''ll normally want to describe the program or the other code object you plan
    to create. If the program is complex, consider breaking it down into components.
    ChatGPT can help you to define what the code should do.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**概念化程序或代码目标。** 在开始编写代码之前，通常需要描述你计划创建的程序或其他代码对象。如果程序很复杂，考虑将其分解为组件。ChatGPT可以帮助你定义代码应该做什么。'
- en: '**Write the code.** Once you''ve clearly delineated your coding goal, it''s
    time to start writing—or time to have ChatGPT start writing for you. ChatGPT can
    not only help you map out the structure of the program or object, but it can also
    write complete code for you.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编写代码。** 一旦你清晰地界定了编码目标��就是开始编写的时候，或者让ChatGPT开始为你编写的时候。ChatGPT不仅可以帮助你绘制程序或对象的结构，还可以为你编写完整的代码。'
- en: '**Debug the code.** Sometimes, ChatGPT''s—or your—initial version of the code
    won''t work. When this happens, you can ask ChatGPT to debug it for you.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调试代码。** 有时，ChatGPT或你的初始版本的代码可能无法正常工作。当出现这种情况时，你可以要求ChatGPT为你调试代码。'
- en: '**Refactor the code.** Once the code is working, you can get ChatGPT to restructure
    the code to reduce its complexity and make it easier to read and maintain.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重构代码。** 一旦代码能够运行，你可以让ChatGPT重新构造代码，减少其复杂性，使其更易于阅读和维护。'
- en: '**Optimize the code.** When the code is structured the way you want, you can
    tell ChatGPT to optimize the code to make it run faster, consume fewer resources,
    or both.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化代码。** 当代码结构符合你的要求时，你可以告诉ChatGPT优化代码，使其运行更快，消耗更少资源，或两者兼而有之。'
- en: 'We''ll look at each of these five steps with examples in the following sections.  ##
    Conceptualize the Program or Code Goal'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将在以下章节中通过示例查看这五个步骤。  ## 概念化程序或代码目标'
- en: 'Your first step is usually to conceptualize the program or the code that you
    want to create. Here are examples of prompts you might use to enlist ChatGPT''s
    help:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你通常的第一步是构思你想创建的程序或代码。以下是你可能用来寻求 ChatGPT 帮助的提示示例：
- en: '![Prompticon](images/prompticon.png) **Which programming language would I use
    to analyze large quantities of data?**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **我应该使用哪种编程语言来分析大量数据？**'
- en: ChatGPT suggested languages such as Python, R, SQL, and Julia, explaining the
    pros and cons of each.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 建议使用 Python、R、SQL 和 Julia 等语言，并解释了每种语言的优缺点。
- en: '![Prompticon](images/prompticon.png) **Write a plan for creating a Python script
    to prompt the user to enter information that the script then stores in an Excel
    worksheet.**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **为创建一个 Python 脚本编写一个计划，提示用户输入信息，然后将信息存储在 Excel
    工作表中。**'
- en: ChatGPT provided a detailed plan, from setting up the Python environment and
    creating a new script all the way through to testing the script and expanding
    it to handle more complex scenarios.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 提供了一个详细的计划，从设置 Python 环境和创建新脚本，一直到测试脚本并扩展以处理更复杂的情况。
- en: '![Prompticon](images/prompticon.png) **Using the Go language, I want to create
    a function that adds two floating-point numbers and converts the result to an
    integer. Can you tell me how to get started?**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **使用 Go 语言，我想创建一个函数，将两个浮点数相加并将结果转换为整数。你能告诉我如何开始吗？**'
- en: 'Again, ChatGPT provided full details, including a warning that Go uses static
    typing, which means you need to specify the data types of the inputs and outputs
    the function uses.  ## Write Code'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '再次，ChatGPT 提供了完整的细节，包括一个警告，即 Go 使用静态类型，这意味着你需要指定函数使用的输入和输出的数据类型。  ## 编写代码'
- en: 'To get ChatGPT to write code, tell it which language to use and what code to
    create. Here are three examples:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要让 ChatGPT 写代码，告诉它要使用哪种语言以及要创建什么代码。以下是三个示例：
- en: '![Prompticon](images/prompticon.png) **Write a “Hello, Universe!” program in
    C, including comments explaining each statement.**'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **用 C 编写一个“Hello, Universe!”程序，包括解释每个语句的注释。**'
- en: ChatGPT returned a program with comments explaining what it does. You can click
    the Copy Code button to copy the code, paste it into your C compiler, and run
    it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 返回了一个带有解释的程序。你可以点击“复制代码”按钮复制代码，粘贴到你的 C 编译器中，并运行它。
- en: '![Prompticon](images/prompticon.png) **Implement a bubble sort algorithm in
    Rust that prints out every operation it performs so I can understand how the result
    is achieved.**'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **在 Rust 中实现一个冒泡排序算法，打印出每次操作，以便我能理解结果是如何实现的。**'
- en: ChatGPT returned a “simple implementation of the Bubble Sort algorithm in Rust”
    with an example that you can copy and a detailed explanation.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 返回了一个“Rust 中冒泡排序算法的简单实现”，附有一个示例和详细解释。
- en: '![Prompticon](images/prompticon.png) **How can I use the Python ruamel.yaml
    library to get two dictionaries: one for key-value pairs of tag and text, and
    one for key-value pairs of tag and comment for tag lines that include comments?**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **如何使用 Python ruamel.yaml 库获取两个字典：一个用于标签和文本的键值对，另一个用于包含注释的标签行的标签和注释的键值对？**'
- en: 'ChatGPT recommended using the CommentedMap object in the ruamel.yaml parser
    and provided an example with a detailed explanation.  ## Debug Code'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 'ChatGPT 建议使用 ruamel.yaml 解析器中的 CommentedMap 对象，并提供了一个带有详细解释的示例。  ## 调试代码'
- en: When you have code that isn't working, see if ChatGPT can help you debug it.
    ChatGPT is good with code that doesn't run at all, code that partly runs but produces
    specific errors, and code that runs apparently successfully but produces the wrong
    output because of logical errors.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当你有无法运行的代码时，看看 ChatGPT 是否能帮助你调试。ChatGPT 擅长处理根本无法运行的代码、部分运行但产生特定错误的代码，以及运行似乎成功但由于逻辑错误产生错误输出的代码。
- en: '### Debug Code That Won''t Run'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '### 调试无法运行的代码'
- en: 'If ChatGPT has created or worked with the code in this chat, you can simply
    refer ChatGPT to the code. If ChatGPT doesn''t know the code, you''ll need to
    paste it in. Give a prompt such as this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ChatGPT 在此聊天中创建或使用了代码，你可以简单地将 ChatGPT 引用到代码中。如果 ChatGPT 不知道代码，你需要将其粘贴进来。给出一个提示，如下：
- en: '![Prompticon](images/prompticon.png) **The following code doesn''t run. Please
    review it and tell me what is wrong.**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![提示图标](images/prompticon.png) **以下代码无法运行。请检查它并告诉我哪里出错了。**'
- en: Press Shift+Enter to create a new line, and then paste in the code by pressing
    Ctrl+V.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 按 Shift+Enter 创建新行，然后按 Ctrl+V 粘贴代码。
- en: If ChatGPT can identify the problem, it returns a brief explanation of what
    the problem is and why it occurs. It also returns a version of the code, updated
    with the fix it has identified, for you to try.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果ChatGPT能够识别问题，它会返回一个简要的解释问题的原因以及发生的原因。它还会返回一个更新了已识别修复的代码版本，供你尝试。
- en: 'To give the code a good trial, you may want to ask ChatGPT for test cases.
    Here''s an example prompt:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对代码进行充分测试，你可能想要向ChatGPT请求测试用例。以下是一个示例提示：
- en: '![Prompticon](images/prompticon.png) **Give me four test cases for testing
    the code you just fixed.**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **给我四个测试用例，用于测试你刚刚修复的代码。**'
- en: 'ChatGPT instantly returned those test cases, explaining what each does (such
    as “Test with a null string”) and showing the output each should produce.  ###
    Debug Code That Produces Specific Errors'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 'ChatGPT立即返回了这些测试用例，解释了每个测试用例的作用（例如“使用空字符串进行测试”），并展示了每个测试用例应该产生的输出。  ### 调试产生特定错误的代码'
- en: 'If your code produces a specific error, such as a SyntaxError error in Python,
    give ChatGPT the code and ask why that error occurred. Here''s an example:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的代码产生了特定错误，比如Python中的SyntaxError错误，请给ChatGPT提供代码并询问为什么会出现该错误。以下是一个示例：
- en: '![Prompticon](images/prompticon.png) **Why does this Python statement throw
    a SyntaxError?**'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **为什么这个Python语句会抛出SyntaxError？**'
- en: Press Shift+Enter to create a new line, and then paste in the offending statement
    by pressing Ctrl+V.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 按下Shift+Enter创建新行，然后按Ctrl+V粘贴有问题的语句。
- en: ChatGPT returned an explanation, such as the following, and the corrected code.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT返回了一个解释，以及经过修正的代码。
- en: '![Chatgpticon](images/chatgpticon.png) *The syntax error is occurring because
    you''re missing parentheses around the string you''re trying to print. In Python
    3, the *******print******* statement was replaced with a *******print()*******
    function*.  ### Debug Code That Produces Logical Errors'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Chatgpticon](images/chatgpticon.png) *语法错误发生是因为你没有在尝试打印的字符串周围加上括号。在Python
    3中，*******print*******语句被*******print()*******函数取代*。  ### 调试产生逻辑错误的代码'
- en: Sometimes your code will run without throwing an error, but it will give a result
    that you can tell is wrong. This is usually the result of a *logical* error, which
    is an error that has to do with the logic of what the code does rather than the
    syntax of the code.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你的代码会运行而不抛出错误，但会给出一个明显错误的结果。这通常是*逻辑*错误的结果，这是一个与代码的逻辑有关而不是代码语法的错误。
- en: 'When your code produces a logical error, you can ask ChatGPT what''s wrong.
    For example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的代码产生逻辑错误时，你可以询问ChatGPT出了什么问题。例如：
- en: '![Prompticon](images/prompticon.png) **Why does the following code return a
    positive number instead of a negative number?**'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **为什么下面的代码返回正数而不是负数？**'
- en: 'ChatGPT analyzed the code, provided a detail explanation, and gave me a fixed
    version of the code to try.  ## Refactor Code'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'ChatGPT分析了代码，提供了详细的解释，并给出了一个修复后的代码版本供我尝试。  ## 重构代码'
- en: By this point, your code should be working. Unless you were hacking together
    a quick fix to solve a problem that will never arise again, it's not yet time
    to find laurels to rest on. Instead, you should probably refactor your code, reducing
    its complexity and making it easier to read and maintain. Better yet, have ChatGPT
    refactor the code for you.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个时候，你的代码应该已经可以运行了。除非你只是临时抢修解决一个永远不会再出现的问题，现在还不是找树荫休息的时候。相反，你应该考虑重构你的代码，减少其复杂性，使其更易阅读和维护。最好让ChatGPT为你重构代码。
- en: 'Here are four examples of prompts for refactoring code:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是重构代码的四个提示示例：
- en: '![Prompticon](images/prompticon.png) **Please refactor this code to make it
    easy to read and easy to maintain.**'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **请重构这段代码，使其易于阅读和维护。**'
- en: '![Prompticon](images/prompticon.png) **I want to make this code more maintainable.
    Can you find an existing library that extracts data as I''m doing here?**'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **我想让这段代码更易于维护。你能找到一个现有的库，像我这里做的那样提取数据吗？**'
- en: '![Prompticon](images/prompticon.png) **In the following code, please replace
    the if-then-else chain with a case statement.**'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **请用case语句替换下面的if-then-else链。**'
- en: '![Prompticon](images/prompticon.png) **Refactor this code, moving discrete
    functionality into a set of functions to reduce nesting.**'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **重构这段代码，将离散功能移入一组函数中以减少嵌套。**'
- en: 'For each of these examples, you would provide ChatGPT with the code unless
    ChatGPT already has access to the code in the active chat.  ## Optimize Code'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些示例中的每一个，您会提供代码给 ChatGPT，除非 ChatGPT 已经在当前聊天中访问到了代码。## 优化代码
- en: Once you've refactored the code to your preferred end, you can have ChatGPT
    optimize the code.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将代码重构到您喜欢的状态，您可以让 ChatGPT 优化代码。
- en: Here are two examples of prompts you might use to ask ChatGPT to optimize your
    code. As usual, you would paste in the code unless ChatGPT already has access
    to it in this chat.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个示例提示，您可以用来要求 ChatGPT 优化您的代码。通常情况下，您会粘贴代码，除非 ChatGPT 已经在此聊天中访问到了。
- en: '*   ![Prompticon](images/prompticon.png) **Identify any likely performance
    issues in the C# code below and tell me how to fix them.**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '-   ![Prompticon](images/prompticon.png) **识别下面的 C# 代码中可能存在的性能问题，并告诉我如何修复。**'
- en: '![Prompticon](images/prompticon.png) **I''d like you to help me identify the
    most computationally-expensive operations in this code and tell me how to make
    it run faster.**'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **我希望您帮助我识别这段代码中最耗费计算资源的操作，并告诉我如何让它运行更快。**'
- en: 'You might also ask for optimization advice in general terms without giving
    ChatGPT your code. Here''s an example:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在不提供代码的情况下以一般术语寻求优化建议。这里是一个示例：
- en: '![Prompticon](images/prompticon.png) **I''m using Python with LXML and trying
    to get all elements with a “persist” attribute. My code iterates over every element
    and checks it for the “persist” attribute. The code runs slowly. Is there a better
    way to do this?**'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![Prompticon](images/prompticon.png) **我正在使用 Python 和 LXML，尝试获取所有具有“persist”属性的元素。我的代码遍历每个元素并检查是否具有“persist”属性。代码运行缓慢。有没有更好的方法来做这个？**'
- en: ChatGPT recommended using the XPath language to directly select XML elements
    that have the “persist” attribute.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 建议使用 XPath 语言直接选择具有“persist”属性的 XML 元素。
